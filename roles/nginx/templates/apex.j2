{% if item.ssl is defined and item.ssl %}

server {
    listen 80 http2;
    listen [::]:80 http2;

    server_name {{ item.domain }};

    return 301 https://{{ item.domain }}$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/{{ item.domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ item.domain }}/privkey.pem;

    include /etc/ssl/nginx_ssl.conf;

{% else %}

server {
    listen 80 http2;
    listen [::]:80 http2;

{% endif %}

    server_name {{ item.domain }};

    access_log /srv/http/{{ item.domain }}/log/reverse-access.log;
    error_log /srv/http/{{ item.domain }}/log/reverse-error.log;

    {% if item.well_known is defined and item.well_known %}

    location /.well-known/matrix/client {
        return 200 '{"m.homeserver": {"base_url": "https://matrix.{{ item.domain }}"}}';
        default_type application/json;
        add_header Access-Control-Allow-Origin *;
    }

    location /.well-known/matrix/server {
        return 200 '{"m.server": "matrix.{{ item.domain }}:443"}';
        default_type application/json;
        add_header Access-Control-Allow-Origin *;
    }

    {% endif %}

    {% if item.secure_headers is defined and item.secure_headers %}

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "frame-ancestors 'self'";

    {% endif %}
}
