{% if item.ssl is defined and item.ssl %}

server {
    listen 80 http2;
    listen [::]:80 http2;

    server_name {{ item.domain }};

    return 301 https://{{ item.domain }}$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/{{ item.domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ item.domain }}/privkey.pem;

    include /etc/ssl/nginx_ssl.conf;

{% else %}

server {
    listen 80 http2;
    listen [::]:80 http2;

{% endif %}

    server_name {{ item.domain }};

    access_log {{ vhost_dir }}/{{ item.domain }}/log/reverse-access.log;
    error_log {{ vhost_dir }}/{{ item.domain }}/log/reverse-error.log;

    # NOTE: Only valid if Corporal is set as proxy
    location = /_matrix/corporal/_matrix-internal/identity/v1/check_credentials {
        return 404;
    }

    # NOTE: Endpoint specific to Heisenbridge to work around unauthenticated media access
    location ~ ^(/_heisenbridge/media/) {
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host:$server_port;

        proxy_pass http://localhost:10102;
    }

    location ~ ^(/_matrix|/_synapse/client) {
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host:$server_port;

        # NOTE: Match `max_upload_size` in `homeserver.yaml`
        client_max_body_size 150M;

        proxy_pass {{ item.proxy_url }};

        # XXX: Synapse responses may be chunked, which is an HTTP/1.1 feature
        proxy_http_version 1.1;
    }
}
